CCS PCM C Compiler, Version 5.070, 56587               26-sep.-17 15:55

               Filename:   C:\uControl\PIC16F886\PanicButton\main.lst

               ROM used:   201 words (2%)
                           Largest free fragment is 2048
               RAM used:   9 (2%) at main() level
                           12 (3%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   079
0003:  NOP
.................... #include <16F886.h> 
.................... //////////// Standard Header file for the PIC16F886 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F886 
0004:  DATA 2F,15
0005:  DATA 41,26
0006:  DATA 45,29
0007:  DATA 54,21
0008:  DATA 54,27
0009:  DATA AA,17
000A:  DATA 00,00
*
001F:  MOVF   0B,W
0020:  MOVWF  23
0021:  BCF    0B.7
0022:  BSF    03.5
0023:  BSF    03.6
0024:  BSF    0C.7
0025:  BSF    0C.0
0026:  NOP
0027:  NOP
0028:  BCF    03.5
0029:  BCF    03.6
002A:  BTFSC  23.7
002B:  BSF    0B.7
002C:  BSF    03.6
002D:  MOVF   0C,W
002E:  ANDLW  7F
002F:  BTFSC  03.2
0030:  GOTO   075
0031:  BCF    03.6
0032:  MOVWF  23
0033:  BSF    03.6
0034:  MOVF   0D,W
0035:  BCF    03.6
0036:  MOVWF  24
0037:  BSF    03.6
0038:  MOVF   0F,W
0039:  BCF    03.6
003A:  MOVWF  25
003B:  MOVF   23,W
003C:  BTFSS  0C.4
003D:  GOTO   03C
003E:  MOVWF  19
003F:  MOVF   24,W
0040:  BSF    03.6
0041:  MOVWF  0D
0042:  BCF    03.6
0043:  MOVF   25,W
0044:  BSF    03.6
0045:  MOVWF  0F
0046:  BCF    03.6
0047:  MOVF   0B,W
0048:  MOVWF  26
0049:  BCF    0B.7
004A:  BSF    03.5
004B:  BSF    03.6
004C:  BSF    0C.7
004D:  BSF    0C.0
004E:  NOP
004F:  NOP
0050:  BCF    03.5
0051:  BCF    03.6
0052:  BTFSC  26.7
0053:  BSF    0B.7
0054:  BSF    03.6
0055:  RLF    0C,W
0056:  RLF    0E,W
0057:  ANDLW  7F
0058:  BTFSC  03.2
0059:  GOTO   075
005A:  BCF    03.6
005B:  MOVWF  23
005C:  BSF    03.6
005D:  MOVF   0D,W
005E:  BCF    03.6
005F:  MOVWF  24
0060:  BSF    03.6
0061:  MOVF   0F,W
0062:  BCF    03.6
0063:  MOVWF  25
0064:  MOVF   23,W
0065:  BTFSS  0C.4
0066:  GOTO   065
0067:  MOVWF  19
0068:  MOVF   24,W
0069:  BSF    03.6
006A:  MOVWF  0D
006B:  BCF    03.6
006C:  MOVF   25,W
006D:  BSF    03.6
006E:  MOVWF  0F
006F:  INCF   0D,F
0070:  BTFSC  03.2
0071:  INCF   0F,F
0072:  BCF    03.6
0073:  GOTO   01F
0074:  BSF    03.6
0075:  BCF    03.6
0076:  BCF    0A.3
0077:  BCF    0A.4
0078:  GOTO   0BE (RETURN)
....................  
.................... #list 
....................  
....................  
.................... #fuses INTRC, NOWDT, NOPROTECT, NOLVP 
.................... #use delay(clock=8MHZ) 
*
000B:  MOVLW  23
000C:  MOVWF  04
000D:  BCF    03.7
000E:  MOVF   00,W
000F:  BTFSC  03.2
0010:  GOTO   01E
0011:  MOVLW  02
0012:  MOVWF  78
0013:  CLRF   77
0014:  DECFSZ 77,F
0015:  GOTO   014
0016:  DECFSZ 78,F
0017:  GOTO   013
0018:  MOVLW  97
0019:  MOVWF  77
001A:  DECFSZ 77,F
001B:  GOTO   01A
001C:  DECFSZ 00,F
001D:  GOTO   011
001E:  RETURN
....................  
.................... #use RS232(BAUD=4800, XMIT=PIN_C6, RCV=PIN_C7, PARITY=N, BITS=8, STOP=1) 
....................  
.................... #define BTN PIN_B0 
.................... #define CTL PIN_C5	//RS485 control 1=TX 0=RX 
....................  
.................... void main(){ 
*
0079:  MOVF   03,W
007A:  ANDLW  1F
007B:  MOVWF  03
007C:  MOVLW  71
007D:  BSF    03.5
007E:  MOVWF  0F
007F:  CLRF   10
0080:  MOVF   0F,W
0081:  BSF    03.6
0082:  BSF    07.3
0083:  MOVLW  A0
0084:  BCF    03.6
0085:  MOVWF  19
0086:  MOVLW  01
0087:  MOVWF  1A
0088:  MOVLW  A6
0089:  MOVWF  18
008A:  MOVLW  90
008B:  BCF    03.5
008C:  MOVWF  18
008D:  MOVLW  FF
008E:  MOVWF  20
008F:  CLRF   22
0090:  CLRF   21
0091:  BSF    03.5
0092:  BSF    03.6
0093:  MOVF   09,W
0094:  ANDLW  C0
0095:  MOVWF  09
0096:  BCF    03.6
0097:  BCF    1F.4
0098:  BCF    1F.5
0099:  MOVLW  00
009A:  BSF    03.6
009B:  MOVWF  08
009C:  BCF    03.5
009D:  CLRF   07
009E:  CLRF   08
009F:  CLRF   09
00A0:  BCF    03.7
....................  
.................... set_tris_b(0b00000001); 
00A1:  MOVLW  01
00A2:  BSF    03.5
00A3:  BCF    03.6
00A4:  MOVWF  06
.................... set_tris_c(0b10000000); 
00A5:  MOVLW  80
00A6:  MOVWF  07
00A7:  BCF    03.5
00A8:  MOVWF  20
....................  
.................... 	while(true){ 
.................... 	 
.................... 		if(input(BTN)==1){ 
00A9:  BSF    03.5
00AA:  BSF    06.0
00AB:  BCF    03.5
00AC:  BTFSS  06.0
00AD:  GOTO   0C7
.................... 		delay_ms(250); 
00AE:  MOVLW  FA
00AF:  MOVWF  23
00B0:  CALL   00B
.................... 		output_high(CTL); 
00B1:  BCF    20.5
00B2:  MOVF   20,W
00B3:  BSF    03.5
00B4:  MOVWF  07
00B5:  BCF    03.5
00B6:  BSF    07.5
.................... 		printf("/*ALERTBTN*/"); 
00B7:  MOVLW  04
00B8:  BSF    03.6
00B9:  MOVWF  0D
00BA:  MOVLW  00
00BB:  MOVWF  0F
00BC:  BCF    03.6
00BD:  GOTO   01F
.................... 		delay_ms(4); 
00BE:  MOVLW  04
00BF:  MOVWF  23
00C0:  CALL   00B
.................... 		output_low(CTL); 
00C1:  BCF    20.5
00C2:  MOVF   20,W
00C3:  BSF    03.5
00C4:  MOVWF  07
00C5:  BCF    03.5
00C6:  BCF    07.5
.................... 		} 
00C7:  GOTO   0A9
.................... 	 
.................... 	} 
....................  
.................... } 
00C8:  SLEEP

Configuration Fuses:
   Word  1: 2FE5   INTRC NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
